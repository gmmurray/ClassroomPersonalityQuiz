{"version":3,"sources":["quiz/intro.js","quiz/active-question.js","quiz/question-store.js","quiz/in-progress.js","quiz/results.js","App.js","index.js"],"names":["props","className","onClick","beginQuiz","ActiveQuestion","nextQuestion","bind","choice","this","next","questionNumber","options","Component","Questions","number","answers","InProgress","state","index","currentQuestion","firstItem","lastItem","length","score","Lion","Beaver","Otter","GoldenRetriever","winner","updateScore","getWinner","convertIndexToKey","answer","setState","prevState","endQuiz","indexOfWinner","i","startOver","App","testing","complete","win","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.646cabe7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default (props) => {\r\n    return (\r\n        <section className=\"hero is-fullheight is-primary is-bold\">\r\n            <div className=\"hero-body\">\r\n                <div className=\"container has-text-centered\">\r\n                    <h1 className=\"title is-1\">\r\n                        Personality Quiz\r\n                    </h1>\r\n                    <a onClick={props.beginQuiz}>Click here to begin</a>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};","import React, { Component } from 'react';\r\n\r\nexport default class ActiveQuestion extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nextQuestion = this.nextQuestion.bind(this);\r\n    }\r\n\r\n    nextQuestion(choice) {\r\n        this.props.next(choice);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"hero is-fullheight is-dark is-bold\">\r\n                <div className=\"hero-body\">\r\n                    <div className=\"container\">\r\n                        <h1 className=\"title is-1\">\r\n                            Question {this.props.questionNumber}\r\n                        </h1>\r\n                        <a onClick={() => this.nextQuestion(0)}><h2 className=\"subtitle is-3\">{this.props.options[0]}</h2></a>\r\n                    <a onClick={() => this.nextQuestion(1)}><h2 className=\"subtitle is-3\">{this.props.options[1]}</h2></a>\r\n                    <a onClick={() => this.nextQuestion(2)}><h2 className=\"subtitle is-3\">{this.props.options[2]}</h2></a>\r\n                    <a onClick={() => this.nextQuestion(3)}><h2 className=\"subtitle is-3\">{this.props.options[3]}</h2></a>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}","const Questions = [\r\n    {\r\n        number: '1',\r\n        options: ['Likes authority', 'Enthusiastic', 'Sensitive feelings', 'Likes Instruction']\r\n    },\r\n    {\r\n        number: '2',\r\n        options: ['Takes charge', 'Takes risks', 'Loyal', 'Accurate']\r\n    },\r\n    {\r\n        number: '3',\r\n        options: ['Determined', 'Visionary', 'Calm', 'Consistent']\r\n    },\r\n    {\r\n        number: '4',\r\n        options: ['Tries new ideas', 'Likes to talk', 'Enjoys having a schedule', 'Doesn\\'t do things that surprise others']\r\n    },\r\n    {\r\n        number: '5',\r\n        options: ['Competitive', 'Shares ideas', 'Dislikes change', 'Practical']\r\n    },\r\n    {\r\n        number: '6',\r\n        options: ['Problem solver', 'Enjoys popularity', 'Gives in to others', 'Factual']\r\n    },\r\n    {\r\n        number: '7',\r\n        options: ['Productive', 'Fun-loving', 'Avoids confrontations', 'Responsible']\r\n    },\r\n    {\r\n        number: '8',\r\n        options: ['Bold', 'Likes Variety', 'Sensitive', 'Prefers perfection']\r\n    },\r\n    {\r\n        number: '9',\r\n        options: ['Decision maker', 'Spontaneous', 'Nurturing', 'Detail oriented']\r\n    },\r\n    {\r\n        number: '10',\r\n        options: ['Persistent', 'Inspirational', 'Peace maker', 'Logical']\r\n    },\r\n];\r\n\r\nexport default Questions;","import React, { Component, Fragment } from 'react';\r\nimport ActiveQuestion from './active-question';\r\nimport Questions from './question-store';\r\n\r\nconst answers = ['Lion', 'Beaver', 'Otter', 'GoldenRetriever'];\r\nexport default class InProgress extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const initialIndex = 0;\r\n        this.state = {\r\n            index: initialIndex,\r\n            currentQuestion: Questions[initialIndex],\r\n            firstItem: 0,\r\n            lastItem: Questions.length - 1,\r\n            score: {\r\n                Lion: 0,\r\n                Beaver: 0,\r\n                Otter: 0,\r\n                GoldenRetriever: 0\r\n            },\r\n            winner: 0\r\n        };\r\n        this.updateScore = this.updateScore.bind(this);\r\n        this.nextQuestion = this.nextQuestion.bind(this);\r\n        this.getWinner = this.getWinner.bind(this);\r\n        this.convertIndexToKey = this.convertIndexToKey.bind(this);\r\n    }\r\n\r\n    updateScore(choice) {\r\n        let answer = answers[choice];\r\n        this.setState(prevState => {\r\n            return {\r\n                score: {\r\n                    ...prevState.score,\r\n                    [answer]: prevState.score[answer] + 1,\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    nextQuestion(choice) {\r\n        if (this.state.index < 9) {\r\n            this.updateScore(choice);\r\n            this.setState({ currentQuestion: Questions[this.state.index + 1], index: this.state.index + 1 });\r\n            \r\n        } else {\r\n            this.updateScore(choice);\r\n            this.props.endQuiz(this.getWinner());\r\n        }\r\n    }\r\n\r\n    getWinner() {\r\n        let indexOfWinner = 0;\r\n        for (let i = 0; i < 4; i ++){\r\n            if (this.state.score[this.convertIndexToKey(i)] > this.state.score[this.convertIndexToKey(indexOfWinner)]){\r\n                indexOfWinner = i;\r\n            }\r\n        }\r\n        return this.convertIndexToKey(indexOfWinner);\r\n    }\r\n\r\n    convertIndexToKey(index){\r\n        return answers[index];\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            //<Fragment>\r\n                <ActiveQuestion\r\n                    questionNumber={this.state.currentQuestion.number}\r\n                    options={this.state.currentQuestion.options}\r\n                    next={(choice) => this.nextQuestion(choice)}\r\n                />\r\n\r\n                /*{ <p>Lion: {this.state.score['Lion']}</p>\r\n                <p>Beaver: {this.state.score['Beaver']}</p>\r\n                <p>Otter: {this.state.score['Otter']}</p>\r\n                <p>Golden Retriever: {this.state.score['GoldenRetriever']}</p>\r\n                <p>Winner: {this.getWinner()}</p> }*/\r\n            //</Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default (props) => {\r\n    return (\r\n        <section className=\"hero is-fullheight is-info is-bold\">\r\n            <div className=\"hero-body\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"title is-1\">\r\n                        You are a {props.winner}\r\n                    </h1>\r\n                    <a onClick={props.startOver}><h2 className=\"subtitle is-3\">Start Over</h2></a>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, { Component } from 'react';\nimport './sass/styles.scss';\nimport Intro from './quiz/intro.js';\nimport InProgress from './quiz/in-progress';\nimport Results from './quiz/results';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      testing: false,\n      complete: false,\n      winner: null\n    };\n  }\n\n  render() {\n    if (!this.state.testing && !this.state.complete) {\n      return (\n        <Intro \n          beginQuiz={() => this.setState({testing: true})}\n        />\n      )\n    } else if (this.state.testing && !this.state.complete){\n      return (\n        <InProgress\n        endQuiz={(win) => this.setState({testing: false, complete: true, winner: win})}\n        />\n      )\n    } else if (!this.state.testing && this.state.complete) {\n      return (\n        <Results \n          winner={this.state.winner}\n          startOver={() => this.setState({testing: false, complete: false})}\n        />\n      )\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}